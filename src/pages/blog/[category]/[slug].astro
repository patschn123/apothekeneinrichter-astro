---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import Header from '../../../components/Header.astro';
import Footer from '../../../components/Footer.astro';

export async function getStaticPaths() {
  const allBlogPosts = await getCollection('blog', ({ data }: { data: CollectionEntry<'blog'>['data'] }) => {
    return !data.draft;
  });

  return allBlogPosts.map((post: CollectionEntry<'blog'>) => ({
    params: {
      category: post.data.category,
      slug: post.slug.replace(post.data.category + '/', '')
    },
    props: { post }
  }));
}

type Props = {
  post: CollectionEntry<'blog'>;
};

const { category, slug } = Astro.params;
const { post } = Astro.props as Props;

// Get the rendered content
const { Content } = await post.render();

const categoryNames = {
  'apothekenplanung': 'Apothekenplanung',
  'praxiseinrichtung': 'Praxiseinrichtung',
  'einrichtungstrends': 'Einrichtungstrends',
  'betriebsoptimierung': 'Betriebsoptimierung',
  'renovierung-modernisierung': 'Renovierung & Modernisierung'
};

const categoryName = categoryNames[category] || category;

const seoProps = {
  title: post.data.metaTitle || post.data.title,
  description: post.data.metaDescription,
  image: post.data.featuredImage,
  canonical: `https://www.apothekeneinrichter.de/blog/${category}/${slug}`
};

// Breadcrumb data
const breadcrumbs = [
  { name: 'Home', href: '/' },
  { name: 'Blog', href: '/blog' },
  { name: categoryName, href: `/blog/${category}` },
  { name: post.data.title, href: `/blog/${category}/${slug}` }
];

// Get related posts from the same category
const relatedPosts = await getCollection('blog', ({ data }: { data: CollectionEntry<'blog'>['data'] }) => {
  return !data.draft && data.category === category;
});

const otherPosts = relatedPosts
  .filter((p: CollectionEntry<'blog'>) => p.slug !== post.slug)
  .sort((a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime())
  .slice(0, 3);
---

<BaseLayout {...seoProps}>
  <Header />

  <main class="section bg-background">
    <div class="container max-w-4xl">
      <!-- Breadcrumbs -->
      <nav class="mb-8">
        <ol class="flex items-center space-x-2 text-sm text-gray-500">
          {breadcrumbs.map((item, index) => (
            <li class="flex items-center">
              {index > 0 && <span class="mx-2">/</span>}
              {index === breadcrumbs.length - 1 ? (
                <span class="text-gray-900 font-medium line-clamp-1">{item.name}</span>
              ) : (
                <a href={item.href} class="hover:text-primary transition-colors">
                  {item.name}
                </a>
              )}
            </li>
          ))}
        </ol>
      </nav>

      <!-- Back to category -->
      <div class="mb-8">
        <a
          href={`/blog/${category}`}
          class="inline-flex items-center text-blue-600 hover:text-blue-700 transition-colors"
        >
          ← Zurück zu {categoryName}
        </a>
      </div>

      <!-- Article Header -->
      <header class="mb-12">
        <div class="mb-6">
          <span class="inline-block bg-primary-light text-primary px-3 py-1 rounded-full text-sm font-medium mb-4">
            {categoryName}
          </span>
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 mb-6 leading-tight">
            {post.data.title}
          </h1>
          <p class="text-xl text-gray-600 mb-8 leading-relaxed">
            {post.data.description}
          </p>
        </div>

        <!-- Featured Image -->
        <div class="mb-8">
          <img
            src={post.data.featuredImage}
            alt={post.data.title}
            class="w-full h-64 md:h-96 object-cover rounded-lg shadow-lg"
          />
        </div>

        <!-- Article Meta -->
        <div class="flex flex-wrap items-center gap-6 text-sm text-gray-500 pb-8 border-b border-gray-200">
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
            </svg>
            <span>von {post.data.author}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
            </svg>
            <time datetime={post.data.publishDate.toISOString()}>
              {new Date(post.data.publishDate).toLocaleDateString('de-DE', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </time>
          </div>
          {post.data.tags && post.data.tags.length > 0 && (
            <div class="flex items-center gap-2">
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M17.707 9.293a1 1 0 010 1.414l-7 7a1 1 0 01-1.414 0l-7-7A.997.997 0 012 10V5a3 3 0 013-3h5c.256 0 .512.098.707.293l7 7zM5 6a1 1 0 100 2 1 1 0 000-2z" clip-rule="evenodd" />
              </svg>
              <div class="flex gap-2">
                {post.data.tags.map((tag: string) => (
                  <span class="bg-gray-100 text-gray-600 px-2 py-1 rounded text-xs">
                    {tag}
                  </span>
                ))}
              </div>
            </div>
          )}
        </div>
      </header>

      <!-- Article Content -->
      <article class="prose prose-lg max-w-none mb-16">
        <Content />
      </article>

      <!-- FAQs Section -->
      {post.data.faqs && post.data.faqs.length > 0 && (
        <section class="mb-16">
          <h2 class="text-3xl font-bold text-gray-900 mb-8">Häufig gestellte Fragen</h2>
          <div class="space-y-6">
            {post.data.faqs.map((faq: { question: string; answer: string }, index: number) => (
              <details class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
                <summary class="p-6 cursor-pointer hover:bg-gray-50 transition-colors">
                  <h3 class="text-lg font-semibold text-gray-900 pr-8">
                    {faq.question}
                  </h3>
                </summary>
                <div class="px-6 pb-6">
                  <p class="text-gray-600 leading-relaxed">
                    {faq.answer}
                  </p>
                </div>
              </details>
            ))}
          </div>
        </section>
      )}

      <!-- Related Articles -->
      {otherPosts.length > 0 && (
        <section class="border-t border-gray-200 pt-16">
          <h2 class="text-3xl font-bold text-gray-900 mb-8">Weitere Artikel aus {categoryName}</h2>
          <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
            {otherPosts.map((relatedPost: CollectionEntry<'blog'>) => (
              <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                <img
                  src={relatedPost.data.featuredImage}
                  alt={relatedPost.data.title}
                  class="w-full h-48 object-cover"
                />
                <div class="p-6">
                  <div class="flex items-center gap-2 mb-3">
                    <time class="text-sm text-gray-500">
                      {new Date(relatedPost.data.publishDate).toLocaleDateString('de-DE')}
                    </time>
                  </div>
                  <h3 class="text-xl font-bold text-primary mb-3 line-clamp-2">
                    <a href={`/blog/${relatedPost.data.category}/${relatedPost.slug.replace(relatedPost.data.category + '/', '')}`} class="hover:text-primary-light transition-colors">
                      {relatedPost.data.title}
                    </a>
                  </h3>
                  <p class="text-secondary mb-4 line-clamp-3">
                    {relatedPost.data.description}
                  </p>
                  <div class="flex justify-between items-center">
                    <span class="text-sm text-gray-500">von {relatedPost.data.author}</span>
                    <a
                      href={`/blog/${relatedPost.data.category}/${relatedPost.slug.replace(relatedPost.data.category + '/', '')}`}
                      class="text-primary hover:text-primary-light font-medium text-sm"
                    >
                      Weiterlesen →
                    </a>
                  </div>
                </div>
              </article>
            ))}
          </div>

          <div class="text-center mt-8">
            <a
              href={`/blog/${category}`}
              class="inline-flex items-center justify-center px-6 py-3 bg-primary text-white font-medium rounded-lg hover:bg-primary-dark transition-colors"
            >
              Alle Artikel zu {categoryName} anzeigen
            </a>
          </div>
        </section>
      )}
    </div>
  </main>

  <Footer />
</BaseLayout>

<style>
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .prose {
    color: var(--color-text-secondary);
    line-height: 1.75;
  }

  .prose :global(h2) {
    color: var(--color-primary);
    font-size: 1.875rem;
    font-weight: 700;
    margin-top: 2.5rem;
    margin-bottom: 1.5rem;
    line-height: 1.3;
  }

  .prose :global(h3) {
    color: var(--color-primary);
    font-size: 1.5rem;
    font-weight: 600;
    margin-top: 2rem;
    margin-bottom: 1rem;
    line-height: 1.4;
  }

  .prose :global(h4) {
    color: var(--color-text-primary);
    font-size: 1.25rem;
    font-weight: 600;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }

  .prose :global(p) {
    margin-bottom: 1.5rem;
  }

  .prose :global(ul), .prose :global(ol) {
    margin: 1.5rem 0;
    padding-left: 1.5rem;
  }

  .prose :global(li) {
    margin-bottom: 0.5rem;
  }

  .prose :global(a) {
    color: var(--color-primary);
    text-decoration: underline;
    text-decoration-color: var(--color-primary-light);
    transition: color 0.2s ease, text-decoration-color 0.2s ease;
  }

  .prose :global(a:hover) {
    color: var(--color-primary-dark);
    text-decoration-color: var(--color-primary-dark);
  }

  .prose :global(blockquote) {
    border-left: 4px solid var(--color-primary-light);
    padding-left: 1.5rem;
    margin: 2rem 0;
    font-style: italic;
    color: var(--color-text-secondary);
    background-color: var(--color-gray-50);
    padding: 1.5rem;
    border-radius: 0.5rem;
  }

  .prose :global(code:not(pre code)) {
    background-color: var(--color-secondary) !important;
    color: var(--color-primary) !important;
    padding: 0.2em 0.4em !important;
    border-radius: var(--border-radius-sm) !important;
    font-size: 0.875em !important;
    font-weight: 600 !important;
    border: 1px solid var(--color-border);
  }

  .prose :global(pre) {
    background-color: var(--color-secondary) !important;
    color: var(--color-text-primary) !important;
    padding: 1.5rem;
    border-radius: var(--border-radius-lg);
    overflow-x: auto;
    margin: 2rem 0;
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-sm);
  }

  .prose pre code {
    background-color: transparent !important;
    padding: 0 !important;
    color: inherit !important;
    font-size: inherit !important;
  }

  /* Astro code blocks */
  .prose pre.astro-code {
    background-color: var(--color-secondary) !important;
    color: var(--color-text-primary) !important;
    font-family: 'Fira Code', 'Monaco', 'Cascadia Code', 'Roboto Mono', monospace;
    font-size: 0.875rem;
    line-height: 1.6;
    border: 1px solid var(--color-border);
    box-shadow: var(--shadow-sm);
  }

  .prose :global(pre.astro-code.github-dark) {
    background-color: var(--color-secondary) !important;
    color: var(--color-text-primary) !important;
  }

  .prose :global(pre.astro-code .line) {
    display: block;
    min-height: 1.5rem;
  }

  .prose :global(pre.astro-code .line span) {
    color: inherit;
  }

  .prose :global(img) {
    border-radius: 0.5rem;
    margin: 2rem 0;
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  .prose :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 2rem 0;
  }

  .prose :global(th),
  .prose :global(td) {
    border: 1px solid var(--color-gray-200);
    padding: 0.75rem;
    text-align: left;
  }

  .prose :global(th) {
    background-color: var(--color-gray-50);
    font-weight: 600;
    color: var(--color-text-primary);
  }

  /* FAQ Details styling */
  details summary::-webkit-details-marker {
    display: none;
  }

  details summary::before {
    content: '+';
    font-size: 1.5rem;
    font-weight: bold;
    color: var(--color-primary);
    position: absolute;
    right: 1.5rem;
    top: 50%;
    transform: translateY(-50%);
  }

  details[open] summary::before {
    content: '−';
  }

  details summary {
    position: relative;
    outline: none;
  }
</style>
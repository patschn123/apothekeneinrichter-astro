---
export interface BreadcrumbItem {
  name: string;
  href: string;
}

export interface Props {
  items: BreadcrumbItem[];
}

const { items } = Astro.props;
---

<nav aria-label="Breadcrumb" class="mb-8">
  <ol class="flex items-center space-x-2 text-sm">
    {items.map((item, index) => (
      <li class="flex items-center">
        {index > 0 && (
          <svg
            class="w-4 h-4 mx-2 text-gray-400"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
          </svg>
        )}

        {index === items.length - 1 ? (
          <!-- Current page - not linked -->
          <span
            class="text-gray-900 font-medium line-clamp-1 max-w-xs"
            aria-current="page"
          >
            {item.name}
          </span>
        ) : (
          <!-- Linked breadcrumb -->
          <a
            href={item.href}
            class="text-gray-500 hover:text-blue-600 transition-colors duration-200 truncate max-w-xs"
          >
            {item.name}
          </a>
        )}
      </li>
    ))}
  </ol>
</nav>

<!-- Structured Data for Breadcrumbs -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": items.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.name,
    "item": `https://www.apothekeneinrichter.de${item.href}`
  }))
})} />

<style>
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>